apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-helloworld-argo
  namespace: dev-app-awam
  labels:
    app: node-helloworld-argo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node-helloworld-argo
  template:
    metadata:
      labels:
        app: node-helloworld-argo
    spec:
      containers:
      - name: hello-world-argo
        image: bakul.mod.gov.my/testing-app/node-helloworld:v1.01@sha256:a0d3559372f22820132a8009c58191c933d0814dd881e352c7c8287b4b530ea9
        imagePullPolicy: Always
        ports:
        - containerPort: 80   # node-hello-world listens on port 80
#---
#apiVersion: v1
#kind: Service
#metadata:
  #name: node-helloworld-service
  #namespace: dev-app-awam
#spec:
  #type: ClusterIP  # Set the service type to ClusterIP
  #selector:
    #app: node-helloworld
  #ports:
    #- protocol: TCP
      #port: 8181       # The port that will be exposed inside the cluster
      #targetPort: 80 # The port that the container listens on
---
apiVersion: v1
kind: Service
metadata:
  name: node-helloworld-argo-loadbalancer
  namespace: dev-app-awam
spec:
  type: LoadBalancer  # Set the service type to LoadBalancer
  selector:
    app: node-helloworld-argo
  ports:
    - protocol: TCP
      port: 8181       # The port exposed to the external world
      targetPort: 80 # The port that the container listens on
---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
  #name: hello-world-ingress
  #namespace: dev-app-awam
  #annotations:
    #nginx.ingress.kubernetes.io/rewrite-target: /
#spec:
  #rules:
    #- host: hello.local.my  # The hostname to be used
      #http:
        #paths:
          #- path: /
            #pathType: Prefix
            #backend:
              #service:
                #name: hello-world-service  # The name of the service created earlier
                #port:
                  #number: 80  # The port exposed by the service
