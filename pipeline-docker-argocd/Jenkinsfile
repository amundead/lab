pipeline {
    agent {
        label 'docker-jenkins-agent'
    }
    environment {
        DOCKER_IMAGE = "amundead/nginx-hello-world"
        DOCKER_TAG = "v1.10"  // Update this tag as needed
        DOCKER_FULL_IMAGE = "${DOCKER_IMAGE}:${DOCKER_TAG}"
        NAMES_SPACE = "dev-app-awam"  // Namespace for deployment in k8s
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: "https://github.com/amundead/test-repo.git"
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_FULL_IMAGE .'  // Build Docker image
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials-id', passwordVariable: 'DOCKERHUB_CREDENTIALS_PSW', usernameVariable: 'DOCKERHUB_CREDENTIALS_USR')]) {
                        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                        sh 'docker push $DOCKER_FULL_IMAGE'  // Push Docker image to Docker Hub
                    }
                }
            }
        }

        stage('Get Docker Digest') {
            steps {
                script {
                    // Get the image digest
                    DOCKER_DIGEST = sh(script: "docker inspect --format='{{index .RepoDigests 0}}' $DOCKER_FULL_IMAGE | cut -d '@' -f 2", returnStdout: true).trim()
                    echo "Docker Digest: ${DOCKER_DIGEST}"
                }
            }
        }

        stage('Update Kubernetes Manifest') {
            steps {
                script {
                    // Replace the image field with the new image and digest
                    sh """
                    sed -i 's|image:.*|image: $DOCKER_IMAGE@sha256:$DOCKER_DIGEST|g' /home/jenkins/workspace/CI-CD-hellowordtomyhome/deploy/deployment.yaml
                    """

                    // List the directory to verify the changes
                    sh 'ls -R /home/jenkins/workspace/CI-CD-hellowordtomyhome/'

                    // Commit and push changes to Git
                    dir('/home/jenkins/workspace/CI-CD-hellowordtomyhome/deploy') {
                        withCredentials([usernamePassword(credentialsId: 'github-credentials-id', passwordVariable: 'GITHUB_PASSWORD', usernameVariable: 'GITHUB_USERNAME')]) {
                            
                            sh "git config user.name '$GITHUB_USERNAME'"
                            sh "git config user.email '${GITHUB_USERNAME}@yahoo.com'"
                            
                            def changes = sh(script: "git diff --name-only", returnStdout: true).trim()
                            if (changes) {
                                sh "git add deployment.yaml"
                                sh "git commit -m 'Update image to ${DOCKER_IMAGE}@sha256:${DOCKER_DIGEST}'"
                                sh "git push https://$GITHUB_USERNAME:$GITHUB_PASSWORD@github.com/amundead/test-repo.git HEAD:main"
                            } else {
                                echo "No changes detected in deployment.yaml, skipping commit."
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment to Kubernetes development cluster successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
