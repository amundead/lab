pipeline {
    agent {
        label 'docker-jenkins-agent'  // Use the Docker template label
    }
    environment {
        DOCKER_IMAGE = "amundead/nginx-hello-world"   // Docker image with tag
        DOCKER_TAG = "v1.10"
        DOCKER_FULL_IMAGE = "${DOCKER_IMAGE}:${DOCKER_TAG}"
        NAMES_SPACE = "dev-app-awam"  // Namespace for deployment in k8s
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: "https://github.com/amundead/test-repo.git"  // Clone your GitHub repo
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_FULL_IMAGE .'  // Build Docker image
            }
        }
        
        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials-id', passwordVariable: 'DOCKERHUB_CREDENTIALS_PSW', usernameVariable: 'DOCKERHUB_CREDENTIALS_USR')]) {
                        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                        sh 'docker push $DOCKER_FULL_IMAGE'  // Push Docker image to Docker Hub
                    }
                }
            }
        }

        stage('Update Kubernetes Manifest') {
            steps {
                script {
                    // Update manifest with new image tag
                    sh "sed -i 's|{{NEW_DOCKER_TAG}}|$DOCKER_TAG|g' /home/jenkins/workspace/CI-CD-hellowordtomyhome/deploy/deployment.yaml"
                    sh 'ls -R /home/jenkins/workspace/CI-CD-hellowordtomyhome/'
                    // Commit and push changes to Git
                    dir('/home/jenkins/workspace/CI-CD-hellowordtomyhome/deploy') {
                        withCredentials([usernamePassword(credentialsId: 'github-credentials-id', passwordVariable: 'GITHUB_PASSWORD', usernameVariable: 'GITHUB_USERNAME')]) {
                            
                            sh "git config user.name '$GITHUB_USERNAME'"
                            sh "git config user.email '${GITHUB_USERNAME}@yahoo.com'"  // Adjust email as needed
                            sh 'git status'
                            sh "git add ./deploy/deployment.yaml"
                            sh "git commit -m 'Update image to ${DOCKER_FULL_IMAGE}'"

                            sh "git push https://$GITHUB_USERNAME:$GITHUB_PASSWORD@github.com/amundead/test-repo.git HEAD:main"
                            
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment to Kubernetes development cluster successful!'
        }
        failure {
            echo 'Deployment failed! haha'
        }
    }
}
